using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using System.Data.SqlClient;
using System.Configuration;

namespace Tweeple
{
    public partial class SearchUser : System.Web.UI.Page
    {
        SqlConnection conObj = new SqlConnection();
        SqlCommand cmdObj = new SqlCommand();
        string mainuser = "";
        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                if (Session["Username"] != null)
                {
                    SuggestionLoad();
                    DataSearch();

                    
                }
                else
                {
                    Response.Redirect("SignIn.aspx");
                }
            }

        }

        private void DataSearch()
        {
            string search = Request.QueryString["Search"].ToString();
            conObj = new SqlConnection("Data Source=192.168.1.30;Initial Catalog=Tweeple;User Id=sa;Password=welcome;");
            cmdObj = new SqlCommand("proc_search", conObj);
            cmdObj.CommandType = CommandType.StoredProcedure;
            cmdObj.Parameters.AddWithValue("@term", search);
            string user = Session["Username"].ToString();
            cmdObj.Parameters.AddWithValue("@user", user);
            if (conObj.State == ConnectionState.Closed)
            { conObj.Open(); }
            SqlDataAdapter adapter = new SqlDataAdapter(cmdObj);
            DataSet ds = new DataSet();
            adapter.Fill(ds, "Suggestion");
            dtsearchcontent.DataSource = ds.Tables["Suggestion"];
            dtsearchcontent.DataBind();
        }

        private void SuggestionLoad()
        {
            string asd = Session["Username"].ToString();
            imgUserSearch.ImageUrl = "~/ImageHandler1.ashx?ID=" + asd;
            followingCount();
            followersCount();
            conObj = new SqlConnection("Data Source=192.168.1.30;Initial Catalog=Tweeple;User Id=sa;Password=welcome;");

            SqlCommand cmdObj = new SqlCommand("findSuggestion", conObj);
            cmdObj.CommandType = CommandType.StoredProcedure;
            cmdObj.Parameters.AddWithValue("@asd", asd);
            if (conObj.State == ConnectionState.Closed)
            {
                conObj.Open();
            }
            SqlDataAdapter adapter = new SqlDataAdapter(cmdObj);
            DataSet ds = new DataSet();
            adapter.Fill(ds, "Suggestion");
            DataUpload.DataSource = ds.Tables["Suggestion"];
            DataUpload.DataBind();
        }

        private void followingCount()
        {
            string asd = Session["Username"].ToString();
            conObj = new SqlConnection("Data Source=192.168.1.30;Initial Catalog=Tweeple;User Id=sa;Password=welcome;");
            SqlCommand cmdObj1 = new SqlCommand("select Count(*) from Following WHERE user_id=@asd", conObj);
            cmdObj1.Parameters.AddWithValue("@asd", asd);

            conObj.Open();


            SqlDataReader rdr = cmdObj1.ExecuteReader();
            rdr.Read();
            if (rdr.HasRows)
            {
                lblFollowings.Text = rdr[0].ToString();
            }
            rdr.Close();
            cmdObj1.Dispose();
            conObj.Close();

        }

        private void followersCount()
        {
            string asd = Session["Username"].ToString();
            conObj = new SqlConnection("Data Source=192.168.1.30;Initial Catalog=Tweeple;User Id=sa;Password=welcome;");

            SqlCommand cmdObj2 = new SqlCommand("countFollowers", conObj);
            cmdObj2.CommandType = CommandType.StoredProcedure;
            cmdObj2.Parameters.AddWithValue("@asd", asd);
            if (conObj.State == ConnectionState.Closed)
            {
                conObj.Open();
            }

            SqlDataReader rdr1 = cmdObj2.ExecuteReader();
            rdr1.Read();
            if (rdr1.HasRows)
            {
                lblFollower.Text = rdr1[0].ToString();
            }
            rdr1.Close();
            cmdObj2.Dispose();
            conObj.Close();
        }

        protected void lnkSignOut_Click(object sender, EventArgs e)
        {
            Response.Redirect("SignIn.aspx");
        }

       

        protected void DataUpload_ItemCommand(object source, DataListCommandEventArgs e)
        {
            if (e.CommandName == "Follow")
            {
                string userid = e.CommandArgument.ToString();
                UplaodFollowings(userid);

            }
        }

        private void UplaodFollowings(string userid)
        {

            conObj = new SqlConnection("Data Source=192.168.1.30;Initial Catalog=Tweeple;User Id=sa;Password=welcome;");
            cmdObj = new SqlCommand("followingProcedure", conObj);
            cmdObj.CommandType = CommandType.StoredProcedure;
            mainuser = Session["Username"].ToString();
            cmdObj.Parameters.AddWithValue("@userid", mainuser);
            cmdObj.Parameters.AddWithValue("@followingid", userid);
            if (conObj.State == ConnectionState.Closed)
            {
                conObj.Open();

            }
            int res = cmdObj.ExecuteNonQuery();

            cmdObj.Dispose();
            conObj.Close();
            Response.Redirect(Request.RawUrl);

        }

        protected void searchsign_Click(object sender, EventArgs e)
        {
            conObj = new SqlConnection("Data Source=pc-PC;Initial Catalog=Tweeple;integrated security=true;");
            cmdObj = new SqlCommand("proc_search", conObj);
            cmdObj.CommandType = CommandType.StoredProcedure;
            cmdObj.Parameters.AddWithValue("@term", searchtext.Text);
            cmdObj.Parameters.AddWithValue("@user", Session["Username"].ToString());
            if (conObj.State == ConnectionState.Closed)
            { conObj.Open(); }
            SqlDataAdapter adapter = new SqlDataAdapter(cmdObj);
            DataSet ds = new DataSet();
            adapter.Fill(ds, "Suggestion");
            dtsearchcontent.DataSource = ds.Tables["Suggestion"];
            dtsearchcontent.DataBind();

        }


    }
}