using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using System.Data.SqlClient;
using System.Configuration;


namespace Tweeple
{
    public partial class TweepleMaster : System.Web.UI.MasterPage
    {
        SqlConnection conObj = new SqlConnection();
        SqlCommand cmdObj = new SqlCommand();
        string mainuser = "";
        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                if (Session["Username"] != null)
                {
                    lblUsername.Text = Session["Username"].ToString();
                    SuggestionLoad();
                    TweetLoad();
                    LoadFollowing();
                    LoadFollowers();
                    binddata();
                }
                else
                {
                    Response.Redirect("SignIn.aspx");
                }
            }
        }

        private void LoadFollowers()
        {
            string asd = Session["Username"].ToString();
            conObj = new SqlConnection(ConfigurationManager.ConnectionStrings["ConCGI"].ConnectionString);
            SqlCommand cmdObj = new SqlCommand("findFollowers", conObj);
            cmdObj.CommandType = CommandType.StoredProcedure;
            cmdObj.Parameters.AddWithValue("@asd", asd);
            if (conObj.State == ConnectionState.Closed)
            {
                conObj.Open();
            }
            SqlDataAdapter adapter = new SqlDataAdapter(cmdObj);
            DataSet ds = new DataSet();
            adapter.Fill(ds, "Followers");
            dlShowFollowers.DataSource = ds.Tables["Followers"];
            dlShowFollowers.DataBind();
        }

        private void LoadFollowing()
        {
            string asd = Session["Username"].ToString();
            conObj = new SqlConnection(ConfigurationManager.ConnectionStrings["ConCGI"].ConnectionString);
            SqlCommand cmdObj = new SqlCommand("findFollowings", conObj);
            cmdObj.CommandType = CommandType.StoredProcedure;
            cmdObj.Parameters.AddWithValue("@asd", asd);
            if (conObj.State == ConnectionState.Closed)
            {
                conObj.Open();
            }
            SqlDataAdapter adapter = new SqlDataAdapter(cmdObj);
            DataSet ds = new DataSet();
            adapter.Fill(ds, "Followings");
            dlShowFollowings.DataSource = ds.Tables["Followings"];
            dlShowFollowings.DataBind();
        }

        private void TweetLoad()
        {
            string asd = Session["Username"].ToString();
            conObj = new SqlConnection(ConfigurationManager.ConnectionStrings["ConCGI"].ConnectionString);
            SqlCommand cmdObj = new SqlCommand("findOutTweets", conObj);
            cmdObj.CommandType = CommandType.StoredProcedure;
            cmdObj.Parameters.AddWithValue("@asd", asd);
            if (conObj.State == ConnectionState.Closed)
            {
                conObj.Open();
            }
            SqlDataAdapter adapter = new SqlDataAdapter(cmdObj);
            DataSet ds = new DataSet();
            adapter.Fill(ds, "Tweets");
            dlTweets.DataSource = ds.Tables["Tweets"];
            dlTweets.DataBind();


        }
        private void SuggestionLoad()
        {
            string asd = Session["Username"].ToString();
            imgUserImage.ImageUrl = "~/ImageHandler1.ashx?ID=" + asd;
            followingCount();
            followersCount();
            tweetCount();
            conObj = new SqlConnection(ConfigurationManager.ConnectionStrings["ConCGI"].ConnectionString);

            SqlCommand cmdObj = new SqlCommand("findSuggestion", conObj);
            cmdObj.CommandType = CommandType.StoredProcedure;
            cmdObj.Parameters.AddWithValue("@asd", asd);
            if (conObj.State == ConnectionState.Closed)
            {
                conObj.Open();
            }
            SqlDataAdapter adapter = new SqlDataAdapter(cmdObj);
            DataSet ds = new DataSet();
            adapter.Fill(ds, "Suggestion");
            DataUpload.DataSource = ds.Tables["Suggestion"];
            DataUpload.DataBind();
        }

        private void tweetCount()
        {
            string asd = Session["Username"].ToString();
            
            conObj = new SqlConnection(ConfigurationManager.ConnectionStrings["ConCGI"].ConnectionString);
            SqlCommand cmdObj1 = new SqlCommand("select Count(*) from Tweet WHERE user_id=@asd", conObj);
            cmdObj1.Parameters.AddWithValue("@asd", asd);

            conObj.Open();


            SqlDataReader rdr = cmdObj1.ExecuteReader();
            rdr.Read();
            if (rdr.HasRows)
            {
                lblTweets.Text = rdr[0].ToString();
            }
            rdr.Close();
            cmdObj1.Dispose();
            conObj.Close();

        }


        private void followingCount()
        {
            string asd = Session["Username"].ToString();
            conObj = new SqlConnection(ConfigurationManager.ConnectionStrings["ConCGI"].ConnectionString);
            SqlCommand cmdObj1 = new SqlCommand("select Count(*) from Following WHERE user_id=@asd", conObj);
            cmdObj1.Parameters.AddWithValue("@asd", asd);

            conObj.Open();


            SqlDataReader rdr = cmdObj1.ExecuteReader();
            rdr.Read();
            if (rdr.HasRows)
            {
                lblFollowings.Text = rdr[0].ToString();
            }
            rdr.Close();
            cmdObj1.Dispose();
            conObj.Close();

        }
        private void followersCount()
        {
            string asd = Session["Username"].ToString();
            conObj = new SqlConnection(ConfigurationManager.ConnectionStrings["ConCGI"].ConnectionString);
           
            SqlCommand cmdObj2 = new SqlCommand("countFollowers", conObj);
            cmdObj2.CommandType = CommandType.StoredProcedure;
            cmdObj2.Parameters.AddWithValue("@asd", asd);
            if (conObj.State == ConnectionState.Closed)
            {
                conObj.Open();
            }

            SqlDataReader rdr1 = cmdObj2.ExecuteReader();
            rdr1.Read();
            if (rdr1.HasRows)
            {
                lblFollower.Text = rdr1[0].ToString();
            }
            rdr1.Close();
            cmdObj2.Dispose();
            conObj.Close();
        }

        protected void cmdTweet_Click(object sender, EventArgs e)
        {
            string asd = Session["Username"].ToString();

            conObj = new SqlConnection(ConfigurationManager.ConnectionStrings["ConCGI"].ConnectionString);
            cmdObj = new SqlCommand("insertTweet", conObj);
            cmdObj.CommandType = CommandType.StoredProcedure;
            cmdObj.Parameters.AddWithValue("@user_id", asd);
            cmdObj.Parameters.AddWithValue("@Message", Tweet.Text);

            if (conObj.State == ConnectionState.Closed)
            {
                conObj.Open();
            }

            int res = cmdObj.ExecuteNonQuery();
            cmdObj.Dispose();
            conObj.Close();
            Response.Redirect(Request.RawUrl);

        }

        protected void DataUpload_ItemCommand(object source, DataListCommandEventArgs e)
        {
            if (e.CommandName == "Follow")
            {
                string userid = e.CommandArgument.ToString();
                UplaodFollowings(userid);

            }
            if (e.CommandName == "passUserId")
            {
                string userid = e.CommandArgument.ToString();
                Response.Redirect("FriendDetail.aspx?User=" + userid);
            }
        }

        private void UplaodFollowings(string userid)
        {

            conObj = new SqlConnection(ConfigurationManager.ConnectionStrings["ConCGI"].ConnectionString);
            cmdObj = new SqlCommand("followingProcedure", conObj);
            cmdObj.CommandType = CommandType.StoredProcedure;
            mainuser = Session["Username"].ToString();
            cmdObj.Parameters.AddWithValue("@userid", mainuser);
            cmdObj.Parameters.AddWithValue("@followingid", userid);
            if (conObj.State == ConnectionState.Closed)
            {
                conObj.Open();

            }
            int res = cmdObj.ExecuteNonQuery();

            cmdObj.Dispose();
            conObj.Close();
            Response.Redirect(Request.RawUrl);

        }

        protected void lnkSignOut_Click(object sender, EventArgs e)
        {
            Session.Remove("Username");
            Session.RemoveAll();
            Session.Abandon();
            Response.Redirect("SignIn.aspx");
        }



        protected void cmdUpdate_Click(object sender, EventArgs e)
        {


            if ((!txtNewEmail.Text.Equals("")) && (!txtNewPass.Text.Equals("")) && (!txtNewMobile.Text.Equals("")) && (!flImage.Equals("")))
            {

                string asd = Session["Username"].ToString();
                SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConCGI"].ConnectionString);
                SqlCommand cmd = new SqlCommand("proc_update", con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.AddWithValue("@user", asd);

                cmd.Parameters.AddWithValue("@password", txtNewPass.Text);

                cmd.Parameters.AddWithValue("@mobileno", txtNewMobile.Text);
                cmd.Parameters.AddWithValue("@email", txtNewEmail.Text);
                int len = flImage.PostedFile.ContentLength;
                byte[] name = new byte[len];
                flImage.PostedFile.InputStream.Read(name, 0, len);
                cmd.Parameters.AddWithValue("@uimage", name);

                if (con.State == ConnectionState.Closed)
                    con.Open();
                int res = cmd.ExecuteNonQuery();
                con.Close();
            }
            else
            {
                lblError.Text = "Please enter all values to update";
            }
        }

        protected void btnDelAccount_Click(object sender, EventArgs e)
        {
            string asd = Session["Username"].ToString();
            SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConCGI"].ConnectionString);
            SqlCommand cmd = new SqlCommand("proc_deactivate", con);
            cmd.CommandType = CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("@user", asd);
            cmd.Parameters.AddWithValue("@password", txtexistpassword.Text);
            if (con.State == ConnectionState.Closed)
            {
                con.Open();
            }

            int res = cmd.ExecuteNonQuery();
            if (res > 0)
                Response.Redirect("SignIn.aspx");
            con.Close();

        }

        protected void deactivate_Click(object sender, EventArgs e)
        {
            Label5.Visible = true;
            txtexistpassword.Visible = true;
            Label6.Visible = true;
            txtconfirmexixtpassword.Visible = true;
            btnDelAccount.Visible = true;
        }

        private void binddata()
        {
            SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConCGI"].ConnectionString);
            SqlCommand cmd = new SqlCommand("Select * from UserDetail where user_id=@user", con);
            string asd = Session["Username"].ToString();
            cmd.Parameters.AddWithValue("@user", asd);
            if (con.State == ConnectionState.Closed)
            {
                con.Open();
            }
            SqlDataReader myReader = cmd.ExecuteReader();
            while (myReader.Read())
            {
                txtNewEmail.Text = (myReader["Email"].ToString());
                txtNewPass.Text = (myReader["password"].ToString());
                txtNewMobile.Text = (myReader["MobileNo"].ToString());
            }
            con.Close();
        }

        protected void searchsign_Click(object sender, ImageClickEventArgs e)
        {
            Response.Redirect("SearchUser.aspx?Search=" + txtSearch.Text);
        }

        protected void dlShowFollowers_ItemCommand(object source, DataListCommandEventArgs e)
        {
            if (e.CommandName == "passUserId")
            {
                string userid = e.CommandArgument.ToString();
                Response.Redirect("FriendDetail.aspx?User=" + userid);
            }
        }

        protected void dlShowFollowings_ItemCommand(object source, DataListCommandEventArgs e)
        {
            if (e.CommandName == "passUserId")
            {
                string userid = e.CommandArgument.ToString();
                Response.Redirect("FriendDetail.aspx?User=" + userid);
            }
        }


      
    }
}